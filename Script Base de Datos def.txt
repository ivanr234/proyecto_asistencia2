-- Crear la base de datos
CREATE DATABASE GestionAcademica;
GO

USE GestionAcademica;

-- Tabla Administradores
CREATE TABLE Administradores (
    administrador_id INT PRIMARY KEY IDENTITY,
    nombre VARCHAR(50) NOT NULL,
    apellido VARCHAR(50) NOT NULL,
    correo_electronico VARCHAR(100) UNIQUE,
    contraseña VARCHAR(255) NOT NULL,
    numero_documento VARCHAR(20) UNIQUE,
    tipo_documento VARCHAR(20) NOT NULL
);

-- Tabla Programas
CREATE TABLE Programas (
    programa_id INT PRIMARY KEY IDENTITY,
    nombre_programa VARCHAR(100) NOT NULL,
    descripcion VARCHAR(255) NOT NULL,
    duracion_programa VARCHAR(50) NOT NULL,
    tipo_programa VARCHAR(50) NOT NULL
);

-- Tabla Fichas
CREATE TABLE Fichas (
    ficha_id INT PRIMARY KEY IDENTITY,
    numero_ficha VARCHAR(20) NOT NULL,
    cupo_ficha INT NOT NULL,
    tipo_ficha VARCHAR(20) NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    programa_id INT NOT NULL,
    FOREIGN KEY (programa_id) REFERENCES Programas(programa_id)
);

-- Tabla Instructores
CREATE TABLE Instructores (
    instructor_id INT PRIMARY KEY IDENTITY,
    nombre VARCHAR(50) NOT NULL,
    apellido VARCHAR(50) NOT NULL,
    imagen TEXT NOT NULL,
    correo_electronico VARCHAR(100) UNIQUE,
    contraseña VARCHAR(255) NOT NULL,
    numero_documento VARCHAR(20) UNIQUE,
    tipo_documento VARCHAR(20) NOT NULL,
    direccion VARCHAR(100),
    numero VARCHAR(20) UNIQUE NOT NULL,
    tipo_instructor VARCHAR(50),
    ficha_id INT NOT NULL,
    FOREIGN KEY (ficha_id) REFERENCES Fichas(ficha_id)
);

-- Tabla Aprendices
CREATE TABLE Aprendices (
    aprendiz_id INT PRIMARY KEY IDENTITY,
    nombre VARCHAR(50) NOT NULL,
    apellido VARCHAR(50) NOT NULL,
    imagen TEXT NOT NULL,
    correo_electronico VARCHAR(100) UNIQUE,
    contraseña VARCHAR(255) NOT NULL,
    numero_documento VARCHAR(20) UNIQUE,
    tipo_documento VARCHAR(20) NOT NULL,
    numero_aprendiz VARCHAR(20) UNIQUE NOT NULL,
    direccion VARCHAR(100),
    estado VARCHAR(20) NOT NULL
);

-- Tabla Ficha_Aprendiz
CREATE TABLE Ficha_Aprendiz (
    ficha_id INT NOT NULL,
    aprendiz_id INT NOT NULL,
    PRIMARY KEY (ficha_id, aprendiz_id),
    FOREIGN KEY (ficha_id) REFERENCES Fichas(ficha_id),
    FOREIGN KEY (aprendiz_id) REFERENCES Aprendices(aprendiz_id)
);

-- Tabla Competencias
CREATE TABLE Competencias (
    competencia_id INT PRIMARY KEY IDENTITY,
    codigo_competencia VARCHAR(20) NOT NULL,
    nombre_competencia VARCHAR(100) NOT NULL,
    duracion_competencia VARCHAR(50) NOT NULL,
    tipo_competencia VARCHAR(50) NOT NULL
);

-- Tabla Programa_Competencia
CREATE TABLE Programa_Competencia (
    programa_id INT NOT NULL,
    competencia_id INT NOT NULL,
    PRIMARY KEY (programa_id, competencia_id),
    FOREIGN KEY (programa_id) REFERENCES Programas(programa_id),
    FOREIGN KEY (competencia_id) REFERENCES Competencias(competencia_id)
);

-- Tabla Asistencias
CREATE TABLE Asistencias (
    asistencia_id INT PRIMARY KEY IDENTITY,
    aprendiz_id INT NOT NULL,
    fecha DATE NOT NULL,
    hora TIME NOT NULL,
    tipo VARCHAR(20) NOT NULL,
    FOREIGN KEY (aprendiz_id) REFERENCES Aprendices(aprendiz_id)
);

-- Tabla Soportes_Asistencia
CREATE TABLE Soportes_Asistencia (
    soporte_id INT PRIMARY KEY IDENTITY,
    tipo_incapacidad VARCHAR(50) NOT NULL,
    formato_soporte VARCHAR(50) NOT NULL,
    asistencia_id INT NOT NULL,
    archivo VARBINARY(MAX) NULL, -- Columna para almacenar el contenido del archivo
    FOREIGN KEY (asistencia_id) REFERENCES Asistencias(asistencia_id)
);

-- Tabla Reportes_Incapacidad
CREATE TABLE Reportes_Incapacidad (
    reporte_id INT PRIMARY KEY IDENTITY,
    fecha_incapacidad DATE NOT NULL,
    hora_incapacidad TIME NOT NULL,
    soporte_id INT NOT NULL,
    FOREIGN KEY (soporte_id) REFERENCES Soportes_Asistencia(soporte_id)
);

-- Tabla Codigos_Asistencia
CREATE TABLE Codigos_Asistencia (
    codigo_id INT PRIMARY KEY IDENTITY,
    codigo VARCHAR(10) NOT NULL,
    ficha_id INT NOT NULL,
    fecha_generacion DATE NOT NULL,
    hora_generacion TIME NOT NULL,
    hora_expiracion TIME NULL, -- Si no se desea que los códigos expiren
    UNIQUE(codigo),
    FOREIGN KEY (ficha_id) REFERENCES Fichas(ficha_id)
);

-- Procedimiento almacenado Inicio sesión
DROP PROCEDURE IF EXISTS sp_IniciarSesion;
GO

CREATE PROCEDURE sp_IniciarSesion
    @numero_documento VARCHAR(20),
    @tipo_documento VARCHAR(20),
    @contraseña VARCHAR(255)
AS
BEGIN
    IF EXISTS (
        SELECT 1
        FROM Administradores
        WHERE numero_documento = @numero_documento
            AND contraseña = @contraseña
            AND tipo_documento = @tipo_documento
    )
    BEGIN
        SELECT 'Administrador' AS Rol;
    END
    ELSE IF EXISTS (
        SELECT 1
        FROM Instructores
        WHERE numero_documento = @numero_documento
            AND contraseña = @contraseña
            AND tipo_documento = @tipo_documento
    )
    BEGIN
        SELECT 'Instructor' AS Rol;
    END
    ELSE IF EXISTS (
        SELECT 1
        FROM Aprendices
        WHERE numero_documento = @numero_documento
            AND contraseña = @contraseña
            AND tipo_documento = @tipo_documento
    )
    BEGIN
        SELECT 'Aprendiz' AS Rol;
    END
    ELSE
    BEGIN
        SELECT 'Usuario no encontrado' AS Rol;
    END
END
GO
