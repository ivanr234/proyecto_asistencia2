@model ClassLibrary1.Aprendices

@{
    ViewBag.Title = "Editar Aprendiz";
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .container {
            margin-top: 50px;
        }

        .card {
            background-color: #fff;
            border: none;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .card-body {
            padding: 20px;
        }

        label {
            font-weight: bold;
        }

        input[type="text"], select {
            width: 100%;
            height: 40px;
            padding: 10px;
            font-size: 16px;
            border: 1px solid #ccc;
            border-radius: 10px;
        }

        .btn-primary {
            width: 100%;
            padding: 10px 20px;
            font-size: 16px;
            font-weight: bold;
            border-radius: 10px;
            background-color: #007bff;
            border-color: #007bff;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .btn-primary:hover {
                background-color: #0056b3;
                border-color: #0056b3;
            }
    </style>
</head>
<body>
    <div class="container">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Editar Aprendiz</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.aprendiz_id)

                    <div class="form-group">
                        @Html.LabelFor(model => model.usuario_id, "Usuario ID")
                        @Html.DropDownList("usuario_id", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.usuario_id, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nombre, "Nombre")
                        @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.apellido, "Apellido")
                        @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.numero_aprendiz, "Número de Aprendiz")
                        @Html.EditorFor(model => model.numero_aprendiz, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.numero_aprendiz, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.direccion, "Dirección")
                        @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.correo, "Correo Electrónico")
                        @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.estado, "Estado")
                        @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
                    </div>

                    <button type="submit" class="btn btn-primary">Guardar cambios</button>
                </div>
            </div>
        }
    </div>

    <div class="container mt-3">
        @Html.ActionLink("Volver a la lista", "Index", null, new { @class = "btn btn-secondary" })
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/popperjs/core@2.5.4/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
